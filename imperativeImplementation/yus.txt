            if (strcmp(currentContact[i], ", ") != 0 &&
                ((currentContact[i] >= 'A' && currentContact[i] <= 'Z' ||
                (currentContact[i] >= 'a' && currentContact[i] <= 'z'))))
            {

            }

            while (!feof(fptr) && !ferror(fptr))
    {
        if (fgets(contents[line], MAX_LENGTH, fptr) != NULL)
        {
            line++;
        }
    }


        char *currentItem = contents[0];
    printf("%ld", strlen(currentItem));
if(strcmp(argv[1], "largest") == 0)

    for (int i = 0; i < line; i++)
    {
        char *name[20];
        char *address[20];
        char *phoneNumber[20];
        char *currentItem = contents[i];
        char currentChar;
        int itemFlag = 0;
        int length = strlen(currentItem);
        for (int j = 0, k = 0; j < length; j++)
        {
            currentChar = currentItem[j];
            printf("%s\n", currentChar);
            if (currentChar == ",")
            {
                itemFlag++;
                k = 0;
            }

            if (itemFlag == 0)
            {
                name[k] = currentChar;
            }
            else if (itemFlag == 1)
            {
                address[k] = currentChar;
            }
            else if (itemFlag == 2)
            {
                phoneNumber[k] = currentChar;
            }
        }
        // printf("name: %s, address: %s, phoneNumber: %s\n", name, address, phoneNumber);
    }


            // if (itemFlag == 0)
        // {
        //     name[i] = c;
        //     printf("%c", c);

        // } else if (itemFlag == 1)
        // {
        //     address[i] = c;
        //     printf("%c", c);

        // } else if (itemFlag == 2)
        // {
        //     phoneNumber[i] = c;
        //     printf("%c", c);
        // }

        // if (c == '\0')
        // {
        //     itemFlag = 0;
        //     i = 0;
        //     printf("name: %s, address: %s, number: %s\n", name, address, phoneNumber);
        // }
        // i++;
        // printf("%c", c);



        if (c == *",")
        {
            itemFlag++;
        }
        if (itemFlag == 0)
        {
            name[i] = c;
            // printf("%c", c);

        } 
        else if (itemFlag == 1)
        {
            address[i] = c;

        } else if (itemFlag == 2)
        {
            phoneNumber[i] = c;
        }

        i++;
        if (c == '\n')
        {
            itemFlag = 0;
            i = 0;
            printf("name: %s, address: %s, number: %s\n", name, address, phoneNumber);
            // char name[20] = {0};
            // char address[20] = {0};
            // char phoneNumber[20] = {0};
        }


        dis shit good
                if (c == '\n')
        {
            // name[strlen(name)] = '\0';
            if (firstNodeFlag == 0)
            {
                firstNodeFlag = 1;
                root = insert(root, atoi(phoneNumber), name, address);
            }
            
            insert(root, atoi(phoneNumber), name, address);
            itemFlag = 0;
            i = 0;
            // printf("%s %s %s", name, address, phoneNumber);
            memset(name, 0, sizeof(name));
            memset(address, 0, sizeof(address));
            memset(phoneNumber, 0, sizeof(phoneNumber));
            c = fgetc(fptr);

        } else if (c == ',')
        {
            itemFlag = itemFlag + 1;
            i = 0;
            // c = fgetc(fptr);
            c = fgetc(fptr);
        }

        if (itemFlag == 0 && c != '\n')
        {
            name[i] = c;
        } else if (itemFlag == 1 )
        {
            address[i] = c;
        } else if (itemFlag == 2 && c != '\n')
        {
            phoneNumber[i] = c;
        }
        
        i = i + 1;